{
  "keywordFileContentHash": "714D160C7C0247C2CF2078051F043057",
  "keywordClasses": [
    {
      "name": "techScore.BaseClass",
      "keywordMethods": [
        {
          "name": "launchApplication",
          "parameters": [
            {
              "name": "url",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This Keyword is to launch a url and maximize the window\r\n\t * @param url is application needs to be launched\r\n\t * @return\r\n\t */"
        },
        {
          "name": "dropdown",
          "parameters": [
            {
              "name": "element",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "option",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This Keyword is select one option from the list of Options\r\n\t * @param element is locator of the list of Options\r\n\t * @param option is value which needs to be selected\r\n\t * @return\r\n\t */"
        },
        {
          "name": "verifyText",
          "parameters": [
            {
              "name": "element",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "expected",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": ""
        },
        {
          "name": "getExportedData",
          "parameters": [
            {
              "name": "fileName",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "sheetName",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "rowNum",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "column",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This Keyword is to get the exported data from the scripts to the Excel file\r\n\t * @param fileName is the name of the excel file where the data has exported\r\n\t * @param sheetName is the name of the sheet from the excel file where the data has exported\r\n\t * @param rowNum is the int value of row where the data has exported\r\n\t * @param column is the name of the column where the data has exported\r\n\t * @return String\r\n\t */"
        },
        {
          "name": "multiTextVerification",
          "parameters": [
            {
              "name": "element",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "expected",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This Keyword is to verify the text is presented in the list of elements\r\n\t * @param element is the locator of list of the text element\r\n\t * @param expected is the text that needs to be verified\r\n\t * @return boolean\r\n\t */"
        },
        {
          "name": "getSplitValue",
          "parameters": [
            {
              "name": "value",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "noOfValue",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This method split the string as per ;\r\n\t * @param value: String which needs to be split.\r\n\t * @param noOfValue: Number of values needs to be split.\r\n\t * @return String\r\n\t */"
        },
        {
          "name": "verifySelection",
          "parameters": [
            {
              "name": "locator",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This Keyword is to get the selection status of the checkbox or radiobutton.\r\n\t * @param locator is web element\u0027s locator.\r\n\t * @return boolean\r\n\t */"
        },
        {
          "name": "verifyMessagesInDropDown",
          "parameters": [
            {
              "name": "dropdown",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "text",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This keyword is used to verify the expected option present in the dropdown or not.\r\n\t * @param dropdown is the locator of the dropdown from the UI.\r\n\t * @param text is the expected option which needs to be verify.\r\n\t * @return boolean\r\n\t */"
        },
        {
          "name": "click",
          "parameters": [
            {
              "name": "locator",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This Keyword is to click on the element using javascript\r\n\t * @param locator is the testobject needs to be clicked\r\n\t * @return null\r\n\t */"
        },
        {
          "name": "clearText",
          "parameters": [
            {
              "name": "locator",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This keyword is to clear text of the field\r\n\t * @param locator of the element needs cleared\r\n\t * @return\r\n\t */"
        },
        {
          "name": "mouseClick",
          "parameters": [
            {
              "name": "locator",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This Keyword is to click on the element using actions class\r\n\t * @param locator is the test object needs to be clicked\r\n\t * @return null\r\n\t */"
        },
        {
          "name": "dataAndTimePickerUTC",
          "parameters": [
            {
              "name": "unit",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "numberOfUnit",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * This Keyword is to pick the from current UTC time to Future or Past\r\n\t * @param unit if the unit of time like seconds,minutes...\r\n\t * @param numberOfUnit is counts of the unit needs to be add\r\n\t * @return String\r\n\t */"
        }
      ]
    }
  ],
  "javadocParsed": true
}